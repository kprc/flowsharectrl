// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stop.proto

package rpccmdservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("stop.proto", fileDescriptor_f049a61f03aafc0b) }

var fileDescriptor_f049a61f03aafc0b = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2e, 0xc9, 0x2f,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2d, 0x2a, 0x48, 0x4e, 0xce, 0x4d, 0x29, 0x4e,
	0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x95, 0x12, 0x48, 0x49, 0x4d, 0x4b, 0x2c, 0xcd, 0x29, 0x49, 0xce,
	0x4d, 0x81, 0x28, 0x30, 0x8a, 0xe3, 0xe2, 0x87, 0x8a, 0xe5, 0x25, 0x15, 0x17, 0x27, 0x16, 0x17,
	0x95, 0x09, 0x79, 0x73, 0xf1, 0xb8, 0x40, 0x84, 0xfc, 0x92, 0x8a, 0xdd, 0x9c, 0x85, 0x64, 0xf5,
	0x50, 0x0c, 0xd1, 0x83, 0x4a, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x48, 0x49, 0xe1, 0x92,
	0x2e, 0x2e, 0x50, 0x62, 0x48, 0x62, 0x03, 0x5b, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x6d,
	0xa4, 0xe6, 0x53, 0x95, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DefaultnbssasrvClient is the client API for Defaultnbssasrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DefaultnbssasrvClient interface {
	DefaultNbsFC(ctx context.Context, in *DefaultRequest, opts ...grpc.CallOption) (*DefaultResp, error)
}

type defaultnbssasrvClient struct {
	cc *grpc.ClientConn
}

func NewDefaultnbssasrvClient(cc *grpc.ClientConn) DefaultnbssasrvClient {
	return &defaultnbssasrvClient{cc}
}

func (c *defaultnbssasrvClient) DefaultNbsFC(ctx context.Context, in *DefaultRequest, opts ...grpc.CallOption) (*DefaultResp, error) {
	out := new(DefaultResp)
	err := c.cc.Invoke(ctx, "/rpccmdservice.defaultnbssasrv/DefaultNbsFC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DefaultnbssasrvServer is the server API for Defaultnbssasrv service.
type DefaultnbssasrvServer interface {
	DefaultNbsFC(context.Context, *DefaultRequest) (*DefaultResp, error)
}

func RegisterDefaultnbssasrvServer(s *grpc.Server, srv DefaultnbssasrvServer) {
	s.RegisterService(&_Defaultnbssasrv_serviceDesc, srv)
}

func _Defaultnbssasrv_DefaultNbsFC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefaultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultnbssasrvServer).DefaultNbsFC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpccmdservice.defaultnbssasrv/DefaultNbsFC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultnbssasrvServer).DefaultNbsFC(ctx, req.(*DefaultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Defaultnbssasrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpccmdservice.defaultnbssasrv",
	HandlerType: (*DefaultnbssasrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DefaultNbsFC",
			Handler:    _Defaultnbssasrv_DefaultNbsFC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stop.proto",
}
